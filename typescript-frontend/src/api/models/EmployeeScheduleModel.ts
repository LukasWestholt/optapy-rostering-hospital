/* tslint:disable */
/* eslint-disable */
/**
 * Schedule API
 * API for scheduling
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ShiftModel } from './ShiftModel';
import {
    ShiftModelFromJSON,
    ShiftModelFromJSONTyped,
    ShiftModelToJSON,
    ShiftModelToJSONTyped,
} from './ShiftModel';
import type { EmployeeModel } from './EmployeeModel';
import {
    EmployeeModelFromJSON,
    EmployeeModelFromJSONTyped,
    EmployeeModelToJSON,
    EmployeeModelToJSONTyped,
} from './EmployeeModel';
import type { AvailabilityModel } from './AvailabilityModel';
import {
    AvailabilityModelFromJSON,
    AvailabilityModelFromJSONTyped,
    AvailabilityModelToJSON,
    AvailabilityModelToJSONTyped,
} from './AvailabilityModel';
import type { ScheduleState } from './ScheduleState';
import {
    ScheduleStateFromJSON,
    ScheduleStateFromJSONTyped,
    ScheduleStateToJSON,
    ScheduleStateToJSONTyped,
} from './ScheduleState';

/**
 * 
 * @export
 * @interface EmployeeScheduleModel
 */
export interface EmployeeScheduleModel {
    /**
     * 
     * @type {ScheduleState}
     * @memberof EmployeeScheduleModel
     */
    scheduleState: ScheduleState;
    /**
     * 
     * @type {Array<AvailabilityModel>}
     * @memberof EmployeeScheduleModel
     */
    availabilityList: Array<AvailabilityModel>;
    /**
     * 
     * @type {Array<EmployeeModel>}
     * @memberof EmployeeScheduleModel
     */
    employeeList: Array<EmployeeModel>;
    /**
     * 
     * @type {Array<ShiftModel>}
     * @memberof EmployeeScheduleModel
     */
    shiftList: Array<ShiftModel>;
    /**
     * 
     * @type {string}
     * @memberof EmployeeScheduleModel
     */
    solverStatus: string;
    /**
     * 
     * @type {string}
     * @memberof EmployeeScheduleModel
     */
    score: string;
}

/**
 * Check if a given object implements the EmployeeScheduleModel interface.
 */
export function instanceOfEmployeeScheduleModel(value: object): value is EmployeeScheduleModel {
    if (!('scheduleState' in value) || value['scheduleState'] === undefined) return false;
    if (!('availabilityList' in value) || value['availabilityList'] === undefined) return false;
    if (!('employeeList' in value) || value['employeeList'] === undefined) return false;
    if (!('shiftList' in value) || value['shiftList'] === undefined) return false;
    if (!('solverStatus' in value) || value['solverStatus'] === undefined) return false;
    if (!('score' in value) || value['score'] === undefined) return false;
    return true;
}

export function EmployeeScheduleModelFromJSON(json: any): EmployeeScheduleModel {
    return EmployeeScheduleModelFromJSONTyped(json, false);
}

export function EmployeeScheduleModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmployeeScheduleModel {
    if (json == null) {
        return json;
    }
    return {
        
        'scheduleState': ScheduleStateFromJSON(json['schedule_state']),
        'availabilityList': ((json['availability_list'] as Array<any>).map(AvailabilityModelFromJSON)),
        'employeeList': ((json['employee_list'] as Array<any>).map(EmployeeModelFromJSON)),
        'shiftList': ((json['shift_list'] as Array<any>).map(ShiftModelFromJSON)),
        'solverStatus': json['solver_status'],
        'score': json['score'],
    };
}

export function EmployeeScheduleModelToJSON(json: any): EmployeeScheduleModel {
    return EmployeeScheduleModelToJSONTyped(json, false);
}

export function EmployeeScheduleModelToJSONTyped(value?: EmployeeScheduleModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'schedule_state': ScheduleStateToJSON(value['scheduleState']),
        'availability_list': ((value['availabilityList'] as Array<any>).map(AvailabilityModelToJSON)),
        'employee_list': ((value['employeeList'] as Array<any>).map(EmployeeModelToJSON)),
        'shift_list': ((value['shiftList'] as Array<any>).map(ShiftModelToJSON)),
        'solver_status': value['solverStatus'],
        'score': value['score'],
    };
}

