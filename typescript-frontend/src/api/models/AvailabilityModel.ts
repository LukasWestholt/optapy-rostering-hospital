/* tslint:disable */
/* eslint-disable */
/**
 * Schedule API
 * API for scheduling
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmployeeModel } from './EmployeeModel';
import {
    EmployeeModelFromJSON,
    EmployeeModelFromJSONTyped,
    EmployeeModelToJSON,
    EmployeeModelToJSONTyped,
} from './EmployeeModel';
import type { AvailabilityType } from './AvailabilityType';
import {
    AvailabilityTypeFromJSON,
    AvailabilityTypeFromJSONTyped,
    AvailabilityTypeToJSON,
    AvailabilityTypeToJSONTyped,
} from './AvailabilityType';

/**
 * 
 * @export
 * @interface AvailabilityModel
 */
export interface AvailabilityModel {
    /**
     * 
     * @type {EmployeeModel}
     * @memberof AvailabilityModel
     */
    employee: EmployeeModel;
    /**
     * 
     * @type {Date}
     * @memberof AvailabilityModel
     */
    date: Date;
    /**
     * 
     * @type {AvailabilityType}
     * @memberof AvailabilityModel
     */
    availabilityType: AvailabilityType;
}



/**
 * Check if a given object implements the AvailabilityModel interface.
 */
export function instanceOfAvailabilityModel(value: object): value is AvailabilityModel {
    if (!('employee' in value) || value['employee'] === undefined) return false;
    if (!('date' in value) || value['date'] === undefined) return false;
    if (!('availabilityType' in value) || value['availabilityType'] === undefined) return false;
    return true;
}

export function AvailabilityModelFromJSON(json: any): AvailabilityModel {
    return AvailabilityModelFromJSONTyped(json, false);
}

export function AvailabilityModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): AvailabilityModel {
    if (json == null) {
        return json;
    }
    return {
        
        'employee': EmployeeModelFromJSON(json['employee']),
        'date': (new Date(json['date'])),
        'availabilityType': AvailabilityTypeFromJSON(json['availability_type']),
    };
}

export function AvailabilityModelToJSON(json: any): AvailabilityModel {
    return AvailabilityModelToJSONTyped(json, false);
}

export function AvailabilityModelToJSONTyped(value?: AvailabilityModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'employee': EmployeeModelToJSON(value['employee']),
        'date': ((value['date']).toISOString().substring(0,10)),
        'availability_type': AvailabilityTypeToJSON(value['availabilityType']),
    };
}

